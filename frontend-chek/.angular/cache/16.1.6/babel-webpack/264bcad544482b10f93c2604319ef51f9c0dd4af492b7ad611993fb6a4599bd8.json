{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Claudio/Desktop/pruebas_tecnicas/Chek/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate, __param } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { firebase } from '@angular/fire/compat'; // Importa 'firebase' correctamente\nexport let LoginComponent = class LoginComponent {\n  constructor(http, router, auth) {\n    this.http = http;\n    this.router = router;\n    this.auth = auth;\n    this.email = '';\n    this.password = '';\n    this.hidePassword = true;\n    this.showPasswordIcon = '../../assets/eye.svg';\n  }\n  login() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.email && _this.password) {\n        try {\n          const response = yield _this.http.post('http://localhost:3000/api/login', {\n            email: _this.email,\n            password: _this.password\n          }).pipe(tap(response => console.log('Token JWT:', response.token)), map(response => response.token), catchError(error => {\n            console.error('Error de inicio de sesión:', error);\n            alert('Inicio de sesión fallido. Por favor, verifique sus credenciales.');\n            return throwError(error);\n          })).toPromise();\n          if (response) {\n            // Guarda el token en el LocalStorage\n            localStorage.setItem('access_token', response);\n            // Redirige al usuario a \"/home\" después del inicio de sesión exitoso\n            _this.router.navigate(['/home']);\n          } else {\n            console.error('Respuesta vacía del servidor');\n            alert('Inicio de sesión fallido. Por favor, verifique sus credenciales.');\n          }\n        } catch (error) {\n          console.error('Error de inicio de sesión:', error);\n          alert('Inicio de sesión fallido. Por favor, verifique sus credenciales.');\n        }\n      } else {\n        alert('Por favor, ingrese usuario y contraseña válidos');\n      }\n    })();\n  }\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n    this.showPasswordIcon = this.hidePassword ? '../../assets/eye.svg' : '../../assets/eye-slash.svg';\n  }\n  loginWithGoogle() {\n    this.auth.signInWithPopup(new firebase.auth.GoogleAuthProvider()).then(result => {\n      // Si el inicio de sesión es exitoso, puedes redirigir al usuario o realizar otras acciones\n      console.log('Inicio de sesión exitoso', result.user);\n    }).catch(error => {\n      // Manejo de errores en caso de que ocurra algún problema\n      console.error('Error en el inicio de sesión', error);\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n}), __param(2, Inject(AngularFireAuth))], LoginComponent);","map":{"version":3,"names":["Component","catchError","map","tap","throwError","AngularFireAuth","firebase","LoginComponent","constructor","http","router","auth","email","password","hidePassword","showPasswordIcon","login","_this","_asyncToGenerator","response","post","pipe","console","log","token","error","alert","toPromise","localStorage","setItem","navigate","togglePasswordVisibility","loginWithGoogle","signInWithPopup","GoogleAuthProvider","then","result","user","catch","__decorate","selector","templateUrl","styleUrls","__param","Inject"],"sources":["C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { firebase } from '@angular/fire/compat'; // Importa 'firebase' correctamente\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  email: string = '';\n  password: string = '';\n  hidePassword: boolean = true;\n  showPasswordIcon: string = '../../assets/eye.svg';\n\n  constructor(private http: HttpClient, private router: Router, @Inject(AngularFireAuth) private auth: AngularFireAuth) {}\n\n  async login(): Promise<void> {\n    if (this.email && this.password) {\n      try {\n        const response = await this.http.post<{ token: string }>('http://localhost:3000/api/login', { email: this.email, password: this.password })\n          .pipe(\n            tap(response => console.log('Token JWT:', response.token)),\n            map(response => response.token),\n            catchError(error => {\n              console.error('Error de inicio de sesión:', error);\n              alert('Inicio de sesión fallido. Por favor, verifique sus credenciales.');\n              return throwError(error);\n            })\n          )\n          .toPromise();\n\n        if (response) {\n          // Guarda el token en el LocalStorage\n          localStorage.setItem('access_token', response);\n\n          // Redirige al usuario a \"/home\" después del inicio de sesión exitoso\n          this.router.navigate(['/home']);\n        } else {\n          console.error('Respuesta vacía del servidor');\n          alert('Inicio de sesión fallido. Por favor, verifique sus credenciales.');\n        }\n      } catch (error) {\n        console.error('Error de inicio de sesión:', error);\n        alert('Inicio de sesión fallido. Por favor, verifique sus credenciales.');\n      }\n    } else {\n      alert('Por favor, ingrese usuario y contraseña válidos');\n    }\n  }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n    this.showPasswordIcon = this.hidePassword ? '../../assets/eye.svg' : '../../assets/eye-slash.svg';\n  }\n\n  loginWithGoogle() {\n    this.auth\n      .signInWithPopup(new firebase.auth.GoogleAuthProvider())\n      .then((result) => {\n        // Si el inicio de sesión es exitoso, puedes redirigir al usuario o realizar otras acciones\n        console.log('Inicio de sesión exitoso', result.user);\n      })\n      .catch((error) => {\n        // Manejo de errores en caso de que ocurra algún problema\n        console.error('Error en el inicio de sesión', error);\n      });\n  }\n\n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}