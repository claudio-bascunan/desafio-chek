{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Claudio/Desktop/pruebas_tecnicas/Chek/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class RegisterComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    // Variables para almacenar los datos del formulario\n    this.firstname = '';\n    this.lastname = '';\n    this.email = '';\n    this.password = '';\n    this.phone = '';\n    this.validatePassword = '';\n    this.birthdate = '';\n    this.hidePassword = true;\n    this.showPasswordIcon = '../../assets/eye.svg';\n    this.showAlert = false; // Variable para controlar la visibilidad del texto de alerta\n  }\n\n  reloadPage() {\n    // Utilizamos el objeto 'location' para recargar la página\n    location.reload();\n  }\n  // Función para enviar la solicitud de registro\n  registerUser() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.validateForm()) {\n        return; // Si hay campos vacíos o las contraseñas no coinciden, detener el registro\n      }\n\n      const user = {\n        firstname: _this.firstname,\n        lastname: _this.lastname,\n        email: _this.email,\n        password: _this.password,\n        phone: _this.phone,\n        validatePassword: _this.validatePassword,\n        birthdate: _this.birthdate\n      };\n      try {\n        yield _this.http.post('http://localhost:3000/api/register', user).toPromise();\n        alert('Cuenta creada exitosamente!');\n        _this.router.navigate(['/login']);\n      } catch (error) {\n        console.error('Error al registrar usuario:', error);\n        alert(error.error.message);\n        // Aquí puedes mostrar un mensaje de error al usuario\n      }\n    })();\n  }\n  // Función para validar el formulario antes de enviarlo\n  validateForm() {\n    if (this.firstname.trim() === '' || this.lastname.trim() === '' || this.email.trim() === '' || this.password.trim() === '' || this.validatePassword.trim() === '' || this.phone.trim() === '' || this.birthdate.trim() === '') {\n      alert('Todos los campos son obligatorios');\n      return false;\n    }\n    if (this.password !== this.validatePassword) {\n      alert('Las contraseñas no coinciden');\n      return false;\n    }\n    return true;\n  }\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n    this.showPasswordIcon = this.hidePassword ? '../../assets/eye.svg' : '../../assets/eye-slash.svg';\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 0,\n  vars: 0,\n  template: function RegisterComponent_Template(rf, ctx) {},\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["RegisterComponent","constructor","http","router","firstname","lastname","email","password","phone","validatePassword","birthdate","hidePassword","showPasswordIcon","showAlert","reloadPage","location","reload","registerUser","_this","_asyncToGenerator","validateForm","user","post","toPromise","alert","navigate","error","console","message","trim","togglePasswordVisibility","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","selectors","decls","vars","template","RegisterComponent_Template","rf","ctx","styles"],"sources":["C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\ninterface RegisterUser {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  phone: string;\n  validatePassword: string;\n  birthdate: string;\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  // Variables para almacenar los datos del formulario\n  firstname: string = '';\n  lastname: string = '';\n  email: string = '';\n  password: string = '';\n  phone: string = '';\n  validatePassword: string = '';\n  birthdate: string = '';\n  hidePassword: boolean = true;\n  showPasswordIcon: string = '../../assets/eye.svg';\n\n  showAlert: boolean = false; // Variable para controlar la visibilidad del texto de alerta\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  reloadPage(): void {\n    // Utilizamos el objeto 'location' para recargar la página\n    location.reload();\n  }\n\n  // Función para enviar la solicitud de registro\n  async registerUser() {\n    if (!this.validateForm()) {\n      return; // Si hay campos vacíos o las contraseñas no coinciden, detener el registro\n    }\n\n    const user: RegisterUser = {\n      firstname: this.firstname,\n      lastname: this.lastname,\n      email: this.email,\n      password: this.password,\n      phone: this.phone,\n      validatePassword: this.validatePassword,\n      birthdate: this.birthdate\n    };\n\n    try {\n      await this.http.post<any>('http://localhost:3000/api/register', user).toPromise();\n      alert('Cuenta creada exitosamente!');\n      this.router.navigate(['/login']);\n    } catch (error: any) {\n      console.error('Error al registrar usuario:', error);\n      alert(error.error.message);\n      // Aquí puedes mostrar un mensaje de error al usuario\n    }\n  }\n\n  // Función para validar el formulario antes de enviarlo\n  validateForm(): boolean {\n    if (\n      this.firstname.trim() === '' ||\n      this.lastname.trim() === '' ||\n      this.email.trim() === '' ||\n      this.password.trim() === '' ||\n      this.validatePassword.trim() === '' ||\n      this.phone.trim() === '' ||\n      this.birthdate.trim() === ''\n    ) {\n      alert('Todos los campos son obligatorios');\n      return false;\n    }\n\n    if (this.password !== this.validatePassword) {\n      alert('Las contraseñas no coinciden');\n      return false;\n    }\n\n    return true;\n  }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n    this.showPasswordIcon = this.hidePassword ? '../../assets/eye.svg' : '../../assets/eye-slash.svg';\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}