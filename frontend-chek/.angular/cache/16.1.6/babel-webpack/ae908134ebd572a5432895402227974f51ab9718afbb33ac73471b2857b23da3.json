{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nexport class LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.username = '';\n    this.password = '';\n  }\n  onLogin() {\n    // Llamar al servicio de autenticación para realizar el inicio de sesión\n    this.authService.login(this.username, this.password);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 12,\n  vars: 0,\n  consts: [[1, \"login-container\"], [1, \"image-overlay\"], [1, \"center-form\"], [\"src\", \"../../assets/logoChek.svg\", \"alt\", \"Imagen SVG\", 1, \"image-svg\"], [\"matInput\", \"\", \"placeholder\", \"Usuario\", \"name\", \"username\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Contrase\\u00F1a\", \"name\", \"password\"], [1, \"center-button\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelement(3, \"img\", 3);\n      i0.ɵɵelementStart(4, \"form\")(5, \"mat-form-field\");\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-form-field\");\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"button\", 7);\n      i0.ɵɵtext(11, \"Iniciar sesi\\u00F3n\");\n      i0.ɵɵelementEnd()()()()();\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm, i3.MatButton, i4.MatFormField, i5.MatInput],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["LoginComponent","constructor","authService","username","password","onLogin","login","i0","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext"],"sources":["C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\login\\login.component.ts","C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\login\\login.component.html"],"sourcesContent":["// login.component.ts\n\nimport { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  username: string = '';\n  password: string = '';\n\n  constructor(private authService: AuthService) { }\n\n  onLogin(): void {\n    // Llamar al servicio de autenticación para realizar el inicio de sesión\n    this.authService.login(this.username, this.password);\n  }\n}\n","<!-- login.component.html -->\n<div class=\"login-container\">\n  <div class=\"image-overlay\"></div> <!-- Capa de fondo degradado -->\n  <div class=\"center-form\">\n    <img class=\"image-svg\" src=\"../../assets/logoChek.svg\" alt=\"Imagen SVG\"> <!-- Imagen SVG encima del formulario -->\n    <form>\n      <mat-form-field>\n        <input matInput placeholder=\"Usuario\" name=\"username\">\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput type=\"password\" placeholder=\"Contraseña\" name=\"password\">\n      </mat-form-field>\n      <div class=\"center-button\"> <!-- Contenedor del botón centrado -->\n        <button mat-raised-button color=\"primary\">Iniciar sesión</button>\n      </div>\n    </form>\n  </div>\n</div>\n"],"mappings":";;;;;;AAUA,OAAM,MAAOA,cAAc;EAKzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;EAE2B;EAEhDC,OAAOA,CAAA;IACL;IACA,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC,IAAI,CAACH,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC;EACtD;;AAVWJ,cAAc,C;mBAAdA,cAAc,EAAAO,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAdV,cAAc,C;QAAdA,cAAc;EAAAW,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT3BV,EAAA,CAAAY,cAAA,aAA6B;MAC3BZ,EAAA,CAAAa,SAAA,aAAiC;MACjCb,EAAA,CAAAY,cAAA,aAAyB;MACvBZ,EAAA,CAAAa,SAAA,aAAwE;MACxEb,EAAA,CAAAY,cAAA,WAAM;MAEFZ,EAAA,CAAAa,SAAA,eAAsD;MACxDb,EAAA,CAAAc,YAAA,EAAiB;MACjBd,EAAA,CAAAY,cAAA,qBAAgB;MACdZ,EAAA,CAAAa,SAAA,eAAyE;MAC3Eb,EAAA,CAAAc,YAAA,EAAiB;MACjBd,EAAA,CAAAY,cAAA,aAA2B;MACiBZ,EAAA,CAAAe,MAAA,2BAAc;MAAAf,EAAA,CAAAc,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}