{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { PreventBackGuard } from './guards/preventback.guard';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ValidateRegisterComponent } from './validate-register/validate-register.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot([\n  // Ruta vacia o / redirige al login\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  },\n  // Ruta para iniciar sesión\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate: [PreventBackGuard]\n  },\n  // Ruta para crear nueva cuenta\n  {\n    path: 'register',\n    component: RegisterComponent,\n    canActivate: [PreventBackGuard]\n  },\n  // Ruta para recuperar clave\n  {\n    path: 'forgot-password',\n    component: ForgotPasswordComponent,\n    canActivate: [PreventBackGuard]\n  },\n  // Ruta para restablecer clave\n  {\n    path: 'reset-password',\n    component: ResetPasswordComponent\n  },\n  // Ruta para validar correo eléctronico de cuenta registrada\n  {\n    path: 'validate-register',\n    component: ValidateRegisterComponent\n  },\n  // Ruta principal al iniciar sesión\n  {\n    path: 'home',\n    component: HomeComponent,\n    canActivate: [AuthGuard]\n  },\n  // Cualquier otra ruta redirige al login\n  {\n    path: '**',\n    redirectTo: '/login'\n  }]), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","LoginComponent","RegisterComponent","HomeComponent","AuthGuard","PreventBackGuard","ForgotPasswordComponent","ResetPasswordComponent","ValidateRegisterComponent","AppRoutingModule","forRoot","path","redirectTo","pathMatch","component","canActivate","imports","i1","exports"],"sources":["C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { PreventBackGuard } from './guards/preventback.guard';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ValidateRegisterComponent } from './validate-register/validate-register.component';\n\n@NgModule({\n  imports: [RouterModule.forRoot([\n    // Ruta vacia o / redirige al login\n    { path: '', redirectTo: '/login', pathMatch: 'full' },\n\n    // Ruta para iniciar sesión\n    { path: 'login', component: LoginComponent, canActivate: [PreventBackGuard] },\n\n    // Ruta para crear nueva cuenta\n    { path: 'register', component: RegisterComponent, canActivate: [PreventBackGuard]},\n\n    // Ruta para recuperar clave\n    { path: 'forgot-password', component: ForgotPasswordComponent, canActivate: [PreventBackGuard] },\n\n    // Ruta para restablecer clave\n    { path: 'reset-password', component: ResetPasswordComponent },\n\n    // Ruta para validar correo eléctronico de cuenta registrada\n    { path: 'validate-register', component: ValidateRegisterComponent },\n\n    // Ruta principal al iniciar sesión\n    { path: 'home', component: HomeComponent, canActivate: [AuthGuard]},\n\n    // Cualquier otra ruta redirige al login\n    { path: '**', redirectTo: '/login' }\n  ])],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D,SAASC,uBAAuB,QAAQ,6CAA6C;AACrF,SAASC,sBAAsB,QAAQ,2CAA2C;AAClF,SAASC,yBAAyB,QAAQ,iDAAiD;;;AA8B3F,OAAM,MAAOC,gBAAgB;AAAhBA,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;QAAhBA;AAAgB;AAAhBA,gBAAgB,C;YA3BjBT,YAAY,CAACU,OAAO,CAAC;EAC7B;EACA;IAAEC,IAAI,EAAE,EAAE;IAAEC,UAAU,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAM,CAAE;EAErD;EACA;IAAEF,IAAI,EAAE,OAAO;IAAEG,SAAS,EAAEb,cAAc;IAAEc,WAAW,EAAE,CAACV,gBAAgB;EAAC,CAAE;EAE7E;EACA;IAAEM,IAAI,EAAE,UAAU;IAAEG,SAAS,EAAEZ,iBAAiB;IAAEa,WAAW,EAAE,CAACV,gBAAgB;EAAC,CAAC;EAElF;EACA;IAAEM,IAAI,EAAE,iBAAiB;IAAEG,SAAS,EAAER,uBAAuB;IAAES,WAAW,EAAE,CAACV,gBAAgB;EAAC,CAAE;EAEhG;EACA;IAAEM,IAAI,EAAE,gBAAgB;IAAEG,SAAS,EAAEP;EAAsB,CAAE;EAE7D;EACA;IAAEI,IAAI,EAAE,mBAAmB;IAAEG,SAAS,EAAEN;EAAyB,CAAE;EAEnE;EACA;IAAEG,IAAI,EAAE,MAAM;IAAEG,SAAS,EAAEX,aAAa;IAAEY,WAAW,EAAE,CAACX,SAAS;EAAC,CAAC;EAEnE;EACA;IAAEO,IAAI,EAAE,IAAI;IAAEC,UAAU,EAAE;EAAQ,CAAE,CACrC,CAAC,EACQZ,YAAY;AAAA;;2EAEXS,gBAAgB;IAAAO,OAAA,GAAAC,EAAA,CAAAjB,YAAA;IAAAkB,OAAA,GAFjBlB,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}