{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Claudio/Desktop/pruebas_tecnicas/Chek/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nexport class ValidateRegisterComponent {\n  constructor(route, http, router) {\n    this.route = route;\n    this.http = http;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      const token = params['token'];\n      if (token) {\n        this.verifyEmail(token);\n      } else {\n        console.error('Token de verificación no proporcionado.');\n        this.router.navigate(['/']);\n      }\n    });\n  }\n  verifyEmail(token) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield _this.http.get(`http://localhost:3000/api/verify-email?token=${token}`).toPromise();\n        alert('¡Tu correo electrónico ha sido verificado correctamente!');\n        _this.router.navigate(['/login']);\n      } catch (error) {\n        console.error('Error al verificar el correo electrónico:', error);\n        alert('Error');\n        _this.router.navigate(['/']);\n      }\n    })();\n  }\n}\nValidateRegisterComponent.ɵfac = function ValidateRegisterComponent_Factory(t) {\n  return new (t || ValidateRegisterComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i1.Router));\n};\nValidateRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ValidateRegisterComponent,\n  selectors: [[\"app-validate-register\"]],\n  decls: 25,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"login-form\"], [1, \"logo-container\"], [\"src\", \"../../assets/logoChek.svg\", \"alt\", \"Imagen SVG\", 1, \"logo-img\"], [1, \"tittle-container\"], [1, \"forgot-password-title\"], [1, \"input-container\"], [\"type\", \"text\", \"placeholder\", \"Correo el\\u00E9ctronico\", \"name\", \"email\", \"id\", \"email\", 1, \"forgot-password-input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"forgot-password-button\", 3, \"click\"], [1, \"not-register-label\"], [1, \"create-account\"], [\"routerLink\", \"/register\", 1, \"create-account-button\"], [1, \"have-account\"], [\"routerLink\", \"/login\", 1, \"login-button\"]],\n  template: function ValidateRegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"img\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"h1\", 5);\n      i0.ɵɵtext(6, \"Recupera tu contrase\\u00F1a\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function ValidateRegisterComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function ValidateRegisterComponent_Template_button_click_10_listener() {\n        return ctx.sendRecovery();\n      });\n      i0.ɵɵtext(11, \"Enviar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"label\", 9);\n      i0.ɵɵtext(13, \"\\u00BFNo tienes cuenta?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 10)(15, \"button\", 11);\n      i0.ɵɵtext(16, \"Crear cuenta nueva\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"label\", 12);\n      i0.ɵɵtext(18, \"\\u00BFYa tienes cuenta?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 10)(20, \"button\", 13);\n      i0.ɵɵtext(21, \"Iniciar sesi\\u00F3n\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"footer\")(23, \"p\");\n      i0.ɵɵtext(24, \"\\u00A9 Desaf\\u00EDo T\\u00E9cnico Chek Agosto 2023 - Claudio Andr\\u00E9s Bascu\\u00F1\\u00E1n Valdivia\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i1.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["ValidateRegisterComponent","constructor","route","http","router","ngOnInit","queryParams","subscribe","params","token","verifyEmail","console","error","navigate","_this","_asyncToGenerator","response","get","toPromise","alert","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","HttpClient","Router","selectors","decls","vars","consts","template","ValidateRegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","ValidateRegisterComponent_Template_input_ngModelChange_8_listener","$event","email","ValidateRegisterComponent_Template_button_click_10_listener","sendRecovery","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\validate-register\\validate-register.component.ts","C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\validate-register\\validate-register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-validate-register',\n  templateUrl: './validate-register.component.html',\n  styleUrls: ['./validate-register.component.css'],\n})\n\nexport class ValidateRegisterComponent implements OnInit {\n  constructor(private route: ActivatedRoute, private http: HttpClient, private router: Router) {}\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      const token = params['token'];\n\n      if (token) {\n        this.verifyEmail(token);\n      } else {\n        console.error('Token de verificación no proporcionado.');\n        this.router.navigate(['/']);\n      }\n    });\n  }\n\n  async verifyEmail(token: string) {\n    try {\n      const response = await this.http.get<any>(`http://localhost:3000/api/verify-email?token=${token}`).toPromise();\n      alert('¡Tu correo electrónico ha sido verificado correctamente!');\n      this.router.navigate(['/login']);\n    } catch (error) {\n      console.error('Error al verificar el correo electrónico:', error);\n      alert('Error');\n      this.router.navigate(['/']);\n    }\n  }\n}\n","<div class=\"container\">\n    <form class=\"login-form\">\n      <div class=\"logo-container\">\n        <img src=\"../../assets/logoChek.svg\" alt=\"Imagen SVG\" class=\"logo-img\">\n      </div>\n      <div class=\"tittle-container\">\n        <h1 class=\"forgot-password-title\">Recupera tu contraseña</h1>\n      </div>\n        <div class=\"input-container\">\n          <input type=\"text\" placeholder=\"Correo eléctronico\" name=\"email\" id=\"email\" [(ngModel)]=\"email\" class=\"forgot-password-input\">\n        </div>\n        <div class=\"input-container\">\n          <button (click)=\"sendRecovery()\" class=\"forgot-password-button\">Enviar</button>\n        </div>\n        <label class=\"not-register-label\">¿No tienes cuenta?</label>\n        <div class=\"create-account\">\n          <button routerLink=\"/register\" class=\"create-account-button\">Crear cuenta nueva</button>\n        </div>\n        <label class=\"have-account\">¿Ya tienes cuenta?</label>\n        <div class=\"create-account\">\n          <button routerLink=\"/login\" class=\"login-button\">Iniciar sesión</button>\n        </div>\n      </form>\n      <footer>\n        <p>&copy; Desafío Técnico Chek Agosto 2023 - Claudio Andrés Bascuñán Valdivia</p>\n      </footer>\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}