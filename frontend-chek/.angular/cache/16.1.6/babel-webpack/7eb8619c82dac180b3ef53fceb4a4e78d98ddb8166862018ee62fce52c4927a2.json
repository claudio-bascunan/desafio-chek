{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  // ... Otros métodos y propiedades ...\n  login(username, password) {\n    // Realizar la llamada al backend y recibir el token de acceso\n    const token = '...'; // Aquí obtendrías el token del backend\n    // Almacenar el token en el LocalStorage\n    localStorage.setItem('access_token', token);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","login","username","password","token","localStorage","setItem","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\auth.service.ts"],"sourcesContent":["// auth.service.ts\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  // ... Otros métodos y propiedades ...\n\n  login(username: string, password: string): void {\n    // Realizar la llamada al backend y recibir el token de acceso\n    const token = '...'; // Aquí obtendrías el token del backend\n\n    // Almacenar el token en el LocalStorage\n    localStorage.setItem('access_token', token);\n  }\n\n  // ... Otros métodos y propiedades ...\n}\n"],"mappings":";AAOA,OAAM,MAAOA,WAAW;EAEtB;EAEAC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC;IACA,MAAMC,KAAK,GAAG,KAAK,CAAC,CAAC;IAErB;IACAC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,KAAK,CAAC;EAC7C;;AAVWJ,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAO,OAAA,EAAXP,WAAW,CAAAQ,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}