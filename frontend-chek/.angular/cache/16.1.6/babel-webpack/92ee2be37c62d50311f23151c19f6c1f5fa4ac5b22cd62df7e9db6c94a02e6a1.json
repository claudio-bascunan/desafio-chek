{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  /* Función que se ejecuta cuando se intenta acceder a una ruta protegida.\n  Verifica si el usuario tiene un token de acceso válido en el LocalStorage */\n  canActivate() {\n    const accessToken = localStorage.getItem('access_token');\n    // Si tiene el token puede acceder a las ruta, sino se redirige al login\n    if (accessToken) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthGuard","constructor","router","canActivate","accessToken","localStorage","getItem","navigate","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router) {}\r\n\r\n  /* Función que se ejecuta cuando se intenta acceder a una ruta protegida.\r\n  Verifica si el usuario tiene un token de acceso válido en el LocalStorage */\r\n  canActivate(): boolean {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    \r\n    // Si tiene el token puede acceder a las ruta, sino se redirige al login\r\n    if (accessToken) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}"],"mappings":";;AAMA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErC;;EAEAC,WAAWA,CAAA;IACT,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAExD;IACA,IAAIF,WAAW,EAAE;MACf,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACF,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;;AAfWP,SAAS,C;mBAATA,SAAS,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAATX,SAAS,C;SAATA,SAAS;EAAAY,OAAA,EAATZ,SAAS,CAAAa,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}