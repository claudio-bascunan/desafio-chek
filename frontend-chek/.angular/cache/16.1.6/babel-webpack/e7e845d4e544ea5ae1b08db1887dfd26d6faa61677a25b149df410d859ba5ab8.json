{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nexport class RegisterComponent {\n  constructor(http) {\n    this.http = http;\n    this.firtsname = '';\n    this.lastname = '';\n    this.email = '';\n    this.password = '';\n    this.phone = '';\n    this.validatePassword = '';\n  }\n  register() {\n    const newUser = {\n      username: this.username,\n      password: this.password\n    };\n    this.http.post('http://localhost:3000/api/register', newUser).subscribe(() => alert('Registro exitoso'), error => alert('Error al registrar: ' + error.error.message));\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 23,\n  vars: 6,\n  consts: [[1, \"register-container\"], [1, \"image-overlay\"], [1, \"center-form\"], [1, \"image-container\"], [\"src\", \"../../assets/logoChek.svg\", \"alt\", \"Imagen SVG\", 1, \"image-svg\"], [1, \"register-label\"], [\"matInput\", \"\", \"placeholder\", \"Nombre\", \"name\", \"firtsname\", \"id\", \"firtsname\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Apellido\", \"name\", \"lastname\", \"id\", \"lastname\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"N\\u00FAmero de celular\", \"name\", \"phone\", \"id\", \"phone\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Correo electr\\u00F3nico\", \"name\", \"email\", \"id\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Clave nueva\", \"name\", \"password\", \"id\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Confirmar clave nueva\", \"name\", \"validatePassword\", \"id\", \"validatePassword\", 3, \"ngModel\", \"ngModelChange\"], [1, \"center-button\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"button-register\", 3, \"click\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"label\", 5);\n      i0.ɵɵtext(6, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"form\")(8, \"mat-form-field\")(9, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.firtsname = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"mat-form-field\")(11, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.lastname = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.phone = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"mat-form-field\")(15, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"mat-form-field\")(17, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"mat-form-field\")(19, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.validatePassword = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 12)(21, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_21_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵtext(22, \"Registrarse\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.firtsname);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.lastname);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.phone);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.validatePassword);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm, i3.MatButton, i4.MatFormField, i5.MatInput],\n  styles: [\"\\n\\n\\n\\n\\n[_nghost-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100vh;\\n    margin: 0;\\n    background: linear-gradient(to bottom, #5d3884, #a14fb8);\\n  }\\n  \\n  .example-form[_ngcontent-%COMP%] {\\n    background-color: #fff;\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n  \\n  .example-full-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3QkFBd0I7O0FBRXhCLDhDQUE4QztBQUM5QztJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixTQUFTO0lBQ1Qsd0RBQXdEO0VBQzFEOztFQUVBO0lBQ0Usc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsV0FBVztFQUNiOztFQUVBO0lBQ0UsV0FBVztFQUNiIiwic291cmNlc0NvbnRlbnQiOlsiLyogbG9naW4uY29tcG9uZW50LmNzcyAqL1xyXG5cclxuLyogRXN0aWxvcyBnZW5lcmFsZXMgZGVsIGNvbXBvbmVudGUgZGUgbG9naW4gKi9cclxuOmhvc3Qge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjNWQzODg0LCAjYTE0ZmI4KTtcclxuICB9XHJcbiAgXHJcbiAgLmV4YW1wbGUtZm9ybSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgbWluLXdpZHRoOiAxNTBweDtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgLmV4YW1wbGUtZnVsbC13aWR0aCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["RegisterComponent","constructor","http","firtsname","lastname","email","password","phone","validatePassword","register","newUser","username","post","subscribe","alert","error","message","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","RegisterComponent_Template_input_ngModelChange_9_listener","$event","RegisterComponent_Template_input_ngModelChange_11_listener","RegisterComponent_Template_input_ngModelChange_13_listener","RegisterComponent_Template_input_ngModelChange_15_listener","RegisterComponent_Template_input_ngModelChange_17_listener","RegisterComponent_Template_input_ngModelChange_19_listener","RegisterComponent_Template_button_click_21_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\register\\register.component.ts","C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  firtsname: string = '';\n  lastname: string = '';\n  email: string = '';\n  password: string = '';\n  phone: string = '';\n  validatePassword: string = '';\n\n  constructor(private http: HttpClient) {}\n\n  register() {\n    const newUser = { username: this.username, password: this.password };\n    this.http.post('http://localhost:3000/api/register', newUser)\n      .subscribe(\n        () => alert('Registro exitoso'),\n        (error) => alert('Error al registrar: ' + error.error.message)\n      );\n  }\n}\n","<div class=\"register-container\">\n    <div class=\"image-overlay\"></div> <!-- Capa de fondo degradado -->\n    <div class=\"center-form\">\n      <div class=\"image-container\">\n        <img class=\"image-svg\" src=\"../../assets/logoChek.svg\" alt=\"Imagen SVG\"> <!-- Imagen SVG encima del formulario -->\n      </div>\n      <label class=\"register-label\">Register</label> <!-- Label \"Register\" con letras blancas -->\n      <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Nombre\" name=\"firtsname\" id=\"firtsname\" [(ngModel)]=\"firtsname\">\n          </mat-form-field>\n          <mat-form-field>\n            <input matInput placeholder=\"Apellido\" name=\"lastname\" id=\"lastname\" [(ngModel)]=\"lastname\">\n          </mat-form-field>\n          <mat-form-field>\n            <input matInput placeholder=\"Número de celular\" name=\"phone\" id=\"phone\" [(ngModel)]=\"phone\">\n          </mat-form-field>\n        <mat-form-field>\n            \n          <input matInput placeholder=\"Correo electrónico\" name=\"email\" id=\"email\" [(ngModel)]=\"email\">\n        </mat-form-field>\n        <mat-form-field>\n          <input matInput type=\"password\" placeholder=\"Clave nueva\" name=\"password\" id=\"password\" [(ngModel)]=\"password\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput type=\"password\" placeholder=\"Confirmar clave nueva\" name=\"validatePassword\" id=\"validatePassword\" [(ngModel)]=\"validatePassword\">\n          </mat-form-field>\n        <div class=\"center-button\"> <!-- Contenedor del botón centrado -->\n          <button class=\"button-register\" mat-raised-button color=\"primary\" (click)=\"register()\">Registrarse</button>\n        </div>\n      </form>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}