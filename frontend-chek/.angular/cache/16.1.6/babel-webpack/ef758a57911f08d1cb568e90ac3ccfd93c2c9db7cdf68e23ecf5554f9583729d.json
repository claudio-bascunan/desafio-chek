{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Claudio/Desktop/pruebas_tecnicas/Chek/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ResetPasswordComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.resetStatus);\n  }\n}\nexport class ResetPasswordComponent {\n  constructor(route, http, router) {\n    this.route = route;\n    this.http = http;\n    this.router = router;\n    this.token = ''; // Inicializar token con un valor vacío\n    this.password = '';\n    this.confirmPassword = '';\n    this.resetStatus = '';\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.token = params['token'];\n    });\n  }\n  resetPassword() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.token && _this.password && _this.confirmPassword) {\n        if (_this.password === _this.confirmPassword) {\n          const resetData = {\n            token: _this.token,\n            password: _this.password\n          };\n          try {\n            yield _this.http.post('http://localhost:3000/api/cambiar-contrasena', resetData).toPromise();\n            _this.resetStatus = 'Contraseña restablecida exitosamente.';\n            _this.router.navigate(['/login']); // Redirige al usuario a la página de inicio de sesión\n          } catch (error) {\n            console.error('Error al restablecer la contraseña:', error);\n            _this.resetStatus = 'Error al restablecer la contraseña.';\n          }\n        } else {\n          _this.resetStatus = 'Las contraseñas no coinciden.';\n        }\n      } else {\n        _this.resetStatus = 'Falta información para restablecer la contraseña.';\n      }\n    })();\n  }\n}\nResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) {\n  return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i1.Router));\n};\nResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResetPasswordComponent,\n  selectors: [[\"app-reset-password\"]],\n  decls: 17,\n  vars: 4,\n  consts: [[1, \"reset-password-container\"], [\"class\", \"reset-status\", 4, \"ngIf\"], [3, \"ngSubmit\"], [\"resetForm\", \"ngForm\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"confirmPassword\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"reset-status\"]],\n  template: function ResetPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Restablecer Contrase\\u00F1a\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ResetPasswordComponent_div_3_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementStart(4, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.resetPassword();\n      });\n      i0.ɵɵelementStart(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Nueva Contrase\\u00F1a:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function ResetPasswordComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Confirmar Contrase\\u00F1a:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function ResetPasswordComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.confirmPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 8);\n      i0.ɵɵtext(13, \"Restablecer Contrase\\u00F1a\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"footer\")(15, \"p\");\n      i0.ɵɵtext(16, \"\\u00A9 Desaf\\u00EDo T\\u00E9cnico Chek Agosto 2023 - Claudio Andr\\u00E9s Bascu\\u00F1\\u00E1n Valdivia\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(5);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.resetStatus);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.confirmPassword);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !_r1.valid || ctx.password !== ctx.confirmPassword);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","resetStatus","ResetPasswordComponent","constructor","route","http","router","token","password","confirmPassword","ngOnInit","queryParams","subscribe","params","resetPassword","_this","_asyncToGenerator","resetData","post","toPromise","navigate","error","console","ɵɵdirectiveInject","i1","ActivatedRoute","i2","HttpClient","Router","selectors","decls","vars","consts","template","ResetPasswordComponent_Template","rf","ctx","ɵɵtemplate","ResetPasswordComponent_div_3_Template","ɵɵlistener","ResetPasswordComponent_Template_form_ngSubmit_4_listener","ResetPasswordComponent_Template_input_ngModelChange_8_listener","$event","ResetPasswordComponent_Template_input_ngModelChange_11_listener","ɵɵproperty","_r1","valid"],"sources":["C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\reset-password\\reset-password.component.ts","C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\reset-password\\reset-password.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css'],\n})\nexport class ResetPasswordComponent implements OnInit {\n  token: string = ''; // Inicializar token con un valor vacío\n  password: string = '';\n  confirmPassword: string = '';\n  resetStatus: string = '';\n\n  constructor(private route: ActivatedRoute, private http: HttpClient, private router: Router) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.token = params['token'];\n    });\n  }\n\n  async resetPassword() {\n    if (this.token && this.password && this.confirmPassword) {\n      if (this.password === this.confirmPassword) {\n        const resetData = { token: this.token, password: this.password };\n        try {\n          await this.http.post('http://localhost:3000/api/cambiar-contrasena', resetData).toPromise();\n          this.resetStatus = 'Contraseña restablecida exitosamente.';\n          this.router.navigate(['/login']); // Redirige al usuario a la página de inicio de sesión\n        } catch (error) {\n          console.error('Error al restablecer la contraseña:', error);\n          this.resetStatus = 'Error al restablecer la contraseña.';\n        }\n      } else {\n        this.resetStatus = 'Las contraseñas no coinciden.';\n      }\n    } else {\n      this.resetStatus = 'Falta información para restablecer la contraseña.';\n    }\n  }\n}\n","<div class=\"reset-password-container\">\n    <h2>Restablecer Contraseña</h2>\n    <div *ngIf=\"resetStatus\" class=\"reset-status\">{{ resetStatus }}</div>\n    <form (ngSubmit)=\"resetPassword()\" #resetForm=\"ngForm\">\n      <label for=\"password\">Nueva Contraseña:</label>\n      <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"password\" required>\n  \n      <label for=\"confirmPassword\">Confirmar Contraseña:</label>\n      <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" [(ngModel)]=\"confirmPassword\" required>\n  \n      <button type=\"submit\" [disabled]=\"!resetForm.valid || password !== confirmPassword\">Restablecer Contraseña</button>\n    </form>\n    <footer>\n      <p>&copy; Desafío Técnico Chek Agosto 2023 - Claudio Andrés Bascuñán Valdivia</p>\n    </footer>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}