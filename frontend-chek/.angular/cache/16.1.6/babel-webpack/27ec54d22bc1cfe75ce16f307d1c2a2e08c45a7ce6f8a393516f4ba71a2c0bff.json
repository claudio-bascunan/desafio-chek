{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Claudio/Desktop/pruebas_tecnicas/Chek/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n  }\n  reloadPage() {\n    // Utilizamos el objeto 'location' para recargar la página\n    location.reload();\n  }\n  login() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.email && _this.password) {\n        try {\n          const response = yield _this.http.post('http://localhost:3000/api/login', {\n            email: _this.email,\n            password: _this.password\n          }).pipe(tap(response => console.log('Token JWT:', response.token)), map(response => response.token), catchError(error => {\n            console.error('Error de inicio de sesión:', error);\n            alert('Inicio de sesión fallido. Por favor, verifique sus credenciales.');\n            return throwError(error);\n          })).toPromise();\n          if (response) {\n            // Guarda el token en el LocalStorage\n            localStorage.setItem('access_token', response);\n            // Redirige al usuario a \"/home\" después del inicio de sesión exitoso\n            _this.router.navigate(['/home']);\n          } else {\n            console.error('Respuesta vacía del servidor');\n            alert('Inicio de sesión fallido. Por favor, verifique sus credenciales.');\n          }\n        } catch (error) {\n          console.error('Error de inicio de sesión:', error);\n          alert('Inicio de sesión fallido. Por favor, verifique sus credenciales.');\n        }\n      } else {\n        alert('Por favor, ingrese usuario y contraseña válidos');\n      }\n    })();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 2,\n  consts: [[1, \"login-container\"], [1, \"image-overlay\"], [1, \"center-form\"], [1, \"image-container\", 3, \"click\"], [\"src\", \"../../assets/logoChek.svg\", \"alt\", \"Imagen SVG\", 1, \"image-svg\"], [1, \"login-label\"], [1, \"form-field\"], [\"type\", \"text\", \"placeholder\", \"Correo electr\\u00F3nico o tel\\u00E9fono\", \"name\", \"email\", \"id\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Clave\", \"name\", \"password\", \"id\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [1, \"center-login-button\"], [1, \"button-sign-in\", 3, \"click\"], [1, \"forgot-password\"], [\"routerLink\", \"/forgot-password\", 1, \"forgot-password-label-login\"], [1, \"divider\"], [\"routerLink\", \"/register\", 1, \"button-register\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_div_click_3_listener() {\n        return ctx.reloadPage();\n      });\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"label\", 5);\n      i0.ɵɵtext(6, \"Ingresa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"form\")(8, \"div\", 6)(9, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 9)(13, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_13_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(14, \"Ingresar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 11)(16, \"label\", 12);\n      i0.ɵɵtext(17, \"Recuperar contrase\\u00F1a\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 13);\n      i0.ɵɵelement(19, \"hr\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 9)(21, \"button\", 14);\n      i0.ɵɵtext(22, \"Crear cuenta nueva\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.RouterLink],\n  styles: [\"\\n\\n\\n\\n\\n[_nghost-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n  margin: 0;\\n  background: linear-gradient(to bottom, #5d3884, #a14fb8);\\n}\\n\\n.example-form[_ngcontent-%COMP%] {\\n  background-color: #fff;\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3QkFBd0I7O0FBRXhCLDhDQUE4QztBQUM5QztFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixTQUFTO0VBQ1Qsd0RBQXdEO0FBQzFEOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztBQUNiIiwic291cmNlc0NvbnRlbnQiOlsiLyogbG9naW4uY29tcG9uZW50LmNzcyAqL1xyXG5cclxuLyogRXN0aWxvcyBnZW5lcmFsZXMgZGVsIGNvbXBvbmVudGUgZGUgbG9naW4gKi9cclxuOmhvc3Qge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIG1hcmdpbjogMDtcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjNWQzODg0LCAjYTE0ZmI4KTtcclxufVxyXG5cclxuLmV4YW1wbGUtZm9ybSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gIG1heC13aWR0aDogNTAwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["catchError","map","tap","throwError","LoginComponent","constructor","http","router","email","password","reloadPage","location","reload","login","_this","_asyncToGenerator","response","post","pipe","console","log","token","error","alert","toPromise","localStorage","setItem","navigate","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵlistener","LoginComponent_Template_div_click_3_listener","ɵɵelementEnd","ɵɵtext","LoginComponent_Template_input_ngModelChange_9_listener","$event","LoginComponent_Template_input_ngModelChange_11_listener","LoginComponent_Template_button_click_13_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\login\\login.component.ts","C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\ninterface LoginResponse {\n  token: string;\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  email: string = '';\n  password: string = '';\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  reloadPage(): void {\n    // Utilizamos el objeto 'location' para recargar la página\n    location.reload();\n  }\n\n  async login(): Promise<void> {\n    if (this.email && this.password) {\n      try {\n        const response = await this.http.post<LoginResponse>('http://localhost:3000/api/login', { email: this.email, password: this.password })\n          .pipe(\n            tap(response => console.log('Token JWT:', response.token)),\n            map(response => response.token),\n            catchError(error => {\n              console.error('Error de inicio de sesión:', error);\n              alert('Inicio de sesión fallido. Por favor, verifique sus credenciales.');\n              return throwError(error);\n            })\n          )\n          .toPromise();\n\n        if (response) {\n          // Guarda el token en el LocalStorage\n          localStorage.setItem('access_token', response);\n\n          // Redirige al usuario a \"/home\" después del inicio de sesión exitoso\n          this.router.navigate(['/home']);\n        } else {\n          console.error('Respuesta vacía del servidor');\n          alert('Inicio de sesión fallido. Por favor, verifique sus credenciales.');\n        }\n      } catch (error) {\n        console.error('Error de inicio de sesión:', error);\n        alert('Inicio de sesión fallido. Por favor, verifique sus credenciales.');\n      }\n    } else {\n      alert('Por favor, ingrese usuario y contraseña válidos');\n    }\n  }\n}\n","<div class=\"login-container\">\n  <div class=\"image-overlay\"></div> <!-- Capa de fondo degradado -->\n  <div class=\"center-form\">\n    <div class=\"image-container\" (click)=\"reloadPage()\">\n      <img class=\"image-svg\" src=\"../../assets/logoChek.svg\" alt=\"Imagen SVG\"> <!-- Imagen SVG encima del formulario -->\n    </div>\n    <label class=\"login-label\">Ingresa</label> <!-- Label \"Login\" con letras blancas -->\n    <form>\n      <div class=\"form-field\">\n        <input type=\"text\" placeholder=\"Correo electrónico o teléfono\" name=\"email\" id=\"email\" [(ngModel)]=\"email\">\n      </div>\n      <div class=\"form-field\">\n        <input type=\"password\" placeholder=\"Clave\" name=\"password\" id=\"password\" [(ngModel)]=\"password\">\n      </div>\n      <div class=\"center-login-button\"> <!-- Contenedor del botón centrado -->\n        <button class=\"button-sign-in\" (click)=\"login()\">Ingresar</button>\n      </div>\n      <div class=\"forgot-password\"> <!-- Contenedor del label \"¿Olvidaste tu clave?\" -->\n        <label class=\"forgot-password-label-login\" routerLink=\"/forgot-password\">Recuperar contraseña</label>\n      </div>\n      <div class=\"divider\">\n        <hr>\n      </div>\n      <div class=\"center-login-button\"> <!-- Contenedor del botón centrado -->\n        <button class=\"button-register\" routerLink=\"/register\">Crear cuenta nueva</button>\n      </div>\n    </form>\n  </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}