{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Claudio/Desktop/pruebas_tecnicas/Chek/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nexport let LoginComponent = class LoginComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n    this.hidePassword = true;\n    this.showPasswordIcon = '../../assets/eye.svg';\n    this.showAlert = false;\n    this.alertType = 'success';\n    this.alertMessage = '';\n  }\n  login() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.email && _this.password) {\n        try {\n          const response = yield _this.http.post('http://localhost:3000/api/login', {\n            email: _this.email,\n            password: _this.password\n          }).pipe(tap(response => console.log('Token JWT:', response.token)), map(response => response.token), catchError(error => {\n            console.error('Error de inicio de sesión:', error);\n            _this.showAlertMessage('Inicio de sesión fallido. Por favor, verifique sus credenciales.', 'error');\n            return throwError(error);\n          })).toPromise();\n          if (response) {\n            // Guarda el token en el LocalStorage\n            localStorage.setItem('access_token', response);\n            // Redirige al usuario a \"/home\" después del inicio de sesión exitoso\n            _this.router.navigate(['/home']);\n          } else {\n            console.error('Respuesta vacía del servidor');\n            _this.showAlertMessage('Inicio de sesión fallido. Por favor, verifique sus credenciales.', 'error');\n          }\n        } catch (error) {\n          console.error('Error de inicio de sesión:', error);\n          _this.showAlertMessage('Correo eléctronico y/o contraseña incorrecta.', 'error');\n        }\n      } else {\n        _this.showAlertMessage('Ingrese usuario y/o contraseña válidos.', 'error');\n      }\n    })();\n  }\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n    this.showPasswordIcon = this.hidePassword ? '../../assets/eye.svg' : '../../assets/eye-slash.svg';\n  }\n  showAlertMessage(message, type) {\n    this.alertMessage = message;\n    this.alertType = type;\n    this.showAlert = true;\n    setTimeout(() => {\n      this.showAlert = false;\n    }, 5000);\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","catchError","map","tap","throwError","LoginComponent","constructor","http","router","email","password","hidePassword","showPasswordIcon","showAlert","alertType","alertMessage","login","_this","_asyncToGenerator","response","post","pipe","console","log","token","error","showAlertMessage","toPromise","localStorage","setItem","navigate","togglePasswordVisibility","message","type","setTimeout","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  email: string = '';\n  password: string = '';\n  hidePassword: boolean = true;\n  showPasswordIcon: string = '../../assets/eye.svg';\n  showAlert: boolean = false;\n  alertType: 'success' | 'error' = 'success';\n  alertMessage: string = '';\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  async login(): Promise<void> {\n    if (this.email && this.password) {\n      try {\n        const response = await this.http.post<{ token: string }>('http://localhost:3000/api/login', { email: this.email, password: this.password })\n          .pipe(\n            tap(response => console.log('Token JWT:', response.token)),\n            map(response => response.token),\n            catchError(error => {\n              console.error('Error de inicio de sesión:', error);\n              this.showAlertMessage('Inicio de sesión fallido. Por favor, verifique sus credenciales.', 'error');\n              return throwError(error);\n            })\n          )\n          .toPromise();\n\n        if (response) {\n          // Guarda el token en el LocalStorage\n          localStorage.setItem('access_token', response);\n\n          // Redirige al usuario a \"/home\" después del inicio de sesión exitoso\n          this.router.navigate(['/home']);\n        } else {\n          console.error('Respuesta vacía del servidor');\n          this.showAlertMessage('Inicio de sesión fallido. Por favor, verifique sus credenciales.', 'error');\n        }\n      } catch (error) {\n        console.error('Error de inicio de sesión:', error);\n        this.showAlertMessage('Correo eléctronico y/o contraseña incorrecta.', 'error');\n      }\n    } else {\n      this.showAlertMessage('Ingrese usuario y/o contraseña válidos.', 'error');\n    }\n  }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n    this.showPasswordIcon = this.hidePassword ? '../../assets/eye.svg' : '../../assets/eye-slash.svg';\n  }\n\n  showAlertMessage(message: string, type: 'success' | 'error') {\n    this.alertMessage = message;\n    this.alertType = type;\n    this.showAlert = true;\n\n    setTimeout(() => {\n      this.showAlert = false;\n    }, 5000);\n  }\n  \n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AAGzC,SAASC,UAAU,EAAEC,GAAG,EAAEC,GAAG,QAAQ,gBAAgB;AACrD,SAASC,UAAU,QAAQ,MAAM;AAQ1B,WAAMC,cAAc,GAApB,MAAMA,cAAc;EASzBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IARpD,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,YAAY,GAAY,IAAI;IAC5B,KAAAC,gBAAgB,GAAW,sBAAsB;IACjD,KAAAC,SAAS,GAAY,KAAK;IAC1B,KAAAC,SAAS,GAAwB,SAAS;IAC1C,KAAAC,YAAY,GAAW,EAAE;EAEsC;EAEzDC,KAAKA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACT,IAAID,KAAI,CAACR,KAAK,IAAIQ,KAAI,CAACP,QAAQ,EAAE;QAC/B,IAAI;UACF,MAAMS,QAAQ,SAASF,KAAI,CAACV,IAAI,CAACa,IAAI,CAAoB,iCAAiC,EAAE;YAAEX,KAAK,EAAEQ,KAAI,CAACR,KAAK;YAAEC,QAAQ,EAAEO,KAAI,CAACP;UAAQ,CAAE,CAAC,CACxIW,IAAI,CACHlB,GAAG,CAACgB,QAAQ,IAAIG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEJ,QAAQ,CAACK,KAAK,CAAC,CAAC,EAC1DtB,GAAG,CAACiB,QAAQ,IAAIA,QAAQ,CAACK,KAAK,CAAC,EAC/BvB,UAAU,CAACwB,KAAK,IAAG;YACjBH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;YAClDR,KAAI,CAACS,gBAAgB,CAAC,kEAAkE,EAAE,OAAO,CAAC;YAClG,OAAOtB,UAAU,CAACqB,KAAK,CAAC;UAC1B,CAAC,CAAC,CACH,CACAE,SAAS,EAAE;UAEd,IAAIR,QAAQ,EAAE;YACZ;YACAS,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEV,QAAQ,CAAC;YAE9C;YACAF,KAAI,CAACT,MAAM,CAACsB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;WAChC,MAAM;YACLR,OAAO,CAACG,KAAK,CAAC,8BAA8B,CAAC;YAC7CR,KAAI,CAACS,gBAAgB,CAAC,kEAAkE,EAAE,OAAO,CAAC;;SAErG,CAAC,OAAOD,KAAK,EAAE;UACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;UAClDR,KAAI,CAACS,gBAAgB,CAAC,+CAA+C,EAAE,OAAO,CAAC;;OAElF,MAAM;QACLT,KAAI,CAACS,gBAAgB,CAAC,yCAAyC,EAAE,OAAO,CAAC;;IAC1E;EACH;EAEAK,wBAAwBA,CAAA;IACtB,IAAI,CAACpB,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;IACtC,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACD,YAAY,GAAG,sBAAsB,GAAG,4BAA4B;EACnG;EAEAe,gBAAgBA,CAACM,OAAe,EAAEC,IAAyB;IACzD,IAAI,CAAClB,YAAY,GAAGiB,OAAO;IAC3B,IAAI,CAAClB,SAAS,GAAGmB,IAAI;IACrB,IAAI,CAACpB,SAAS,GAAG,IAAI;IAErBqB,UAAU,CAAC,MAAK;MACd,IAAI,CAACrB,SAAS,GAAG,KAAK;IACxB,CAAC,EAAE,IAAI,CAAC;EACV;CAED;AA5DYR,cAAc,GAAA8B,UAAA,EAL1BnC,SAAS,CAAC;EACToC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWjC,cAAc,CA4D1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}