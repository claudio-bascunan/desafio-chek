{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Claudio/Desktop/desafio-chek/frontend-chek/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ResetPasswordComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.alertMessage, \" \");\n  }\n}\nexport let ResetPasswordComponent = /*#__PURE__*/(() => {\n  class ResetPasswordComponent {\n    constructor(route, http, router) {\n      this.route = route;\n      this.http = http;\n      this.router = router;\n      // Variables para almacenar datos ingresados por el usuario y preestablecidos\n      this.token = '';\n      this.password = '';\n      this.validatePassword = '';\n      this.passwordMatch = false;\n      this.resetStatus = '';\n      this.hidePassword = true;\n      this.showPasswordIcon = '../../assets/eye.svg';\n      this.showValidatePasswordIcon = '../../assets/eye.svg';\n      this.hideValidatePassword = true;\n      this.showAlert = false;\n      this.alertType = 'success';\n      this.alertMessage = '';\n    }\n    // Función que se ejecuta al iniciar y obtiene el token\n    ngOnInit() {\n      this.route.queryParams.subscribe(params => {\n        this.token = params['token'];\n      });\n    }\n    // Función con validaciones y solicitudes para cambiar la clave\n    resetPassword() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (_this.token && _this.password && _this.validatePassword) {\n          if (_this.password.length !== 4 || _this.validatePassword.length !== 4) {\n            _this.showAlertMessage('La clave debe contener 4 dígitos.', 'error');\n          } else if (_this.password !== _this.validatePassword) {\n            _this.showAlertMessage('Las claves no coinciden.', 'error');\n          } else {\n            const resetData = {\n              token: _this.token,\n              password: _this.password\n            };\n            try {\n              // Solicitud post para cambiar clave. Se envia tanto la password como el token obtenido al principio\n              yield _this.http.post('http://localhost:3000/api/change-password', resetData).toPromise();\n              _this.showAlertMessage('Clave restablecida exitosamente.', 'success');\n              setTimeout(() => {\n                _this.router.navigate(['/login']);\n              }, 3000);\n            } catch (error) {\n              _this.showAlertMessage('Error al restablecer la clave.', 'error');\n            }\n          }\n        } else {\n          _this.showAlertMessage('Hay uno o más campos que están vacios.', 'error');\n        }\n      })();\n    }\n    // Función para controlar la entrada del primer input de clave y asegurarse de que solo tenga 4 dígitos\n    onPasswordInput(event) {\n      const passwordValue = event.target.value;\n      event.target.value = passwordValue.replace(/\\D/g, '').slice(0, 4);\n      this.password = event.target.value;\n      this.checkPasswordMatch();\n    }\n    // Función para controlar la entrada del input de confirmación de clave y asegurarse de que solo tenga 4 dígitos\n    onValidatePasswordInput(event) {\n      const validatePasswordValue = event.target.value;\n      event.target.value = validatePasswordValue.replace(/\\D/g, '').slice(0, 4);\n      this.validatePassword = event.target.value;\n      this.checkPasswordMatch();\n    }\n    // Función que compara que las claves sean iguales\n    checkPasswordMatch() {\n      this.passwordMatch = this.password === this.validatePassword;\n    }\n    //Funciones para poder ocultar y visualizar las claves en el formulario de registro\n    togglePasswordVisibility() {\n      this.hidePassword = !this.hidePassword;\n      this.showPasswordIcon = this.hidePassword ? '../../assets/eye.svg' : '../../assets/eye-slash.svg';\n    }\n    toggleValidatePasswordVisibility() {\n      this.hideValidatePassword = !this.hideValidatePassword;\n      this.showValidatePasswordIcon = this.hideValidatePassword ? '../../assets/eye.svg' : '../../assets/eye-slash.svg';\n    }\n    // Función para mostrar un mensaje de alerta al usuario\n    showAlertMessage(message, type) {\n      this.alertMessage = message;\n      this.alertType = type;\n      this.showAlert = true;\n      setTimeout(() => {\n        this.showAlert = false;\n      }, 5000);\n    }\n  }\n  ResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) {\n    return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i1.Router));\n  };\n  ResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResetPasswordComponent,\n    selectors: [[\"app-reset-password\"]],\n    decls: 27,\n    vars: 7,\n    consts: [[1, \"container\"], [1, \"reset-password-form\", 3, \"ngSubmit\"], [\"resetForm\", \"ngForm\"], [1, \"tittle-container\"], [1, \"reset-password-title\"], [\"class\", \"alert-message\", 4, \"ngIf\"], [1, \"input-container\", \"floating-label\"], [1, \"password-input-container\"], [\"placeholder\", \"Clave nueva\", \"name\", \"password\", \"id\", \"password\", \"required\", \"\", \"pattern\", \"[0-9]{4}\", 1, \"reset-password-input\", 3, \"type\", \"ngModel\", \"ngModelChange\", \"input\"], [1, \"password-toggle-btn\", 3, \"click\"], [3, \"src\"], [1, \"validatePassword-input-container\"], [\"placeholder\", \"Confirmar clave nueva\", \"name\", \"validatePassword\", \"id\", \"validatePassword\", \"required\", \"\", \"pattern\", \"[0-9]{4}\", 1, \"reset-password-input\", 3, \"type\", \"ngModel\", \"ngModelChange\", \"input\"], [1, \"input-container\"], [\"type\", \"submit\", 1, \"reset-password-button\", 3, \"click\"], [1, \"alert-message\"]],\n    template: function ResetPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.resetPassword();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5, \"Restablecer clave\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, ResetPasswordComponent_div_6_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function ResetPasswordComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.password = $event;\n        })(\"input\", function ResetPasswordComponent_Template_input_input_9_listener($event) {\n          return ctx.onPasswordInput($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"label\");\n        i0.ɵɵtext(11, \"Clave nueva\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"span\", 9);\n        i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_span_click_12_listener() {\n          return ctx.togglePasswordVisibility();\n        });\n        i0.ɵɵelement(13, \"img\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 6)(15, \"div\", 11)(16, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function ResetPasswordComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.validatePassword = $event;\n        })(\"input\", function ResetPasswordComponent_Template_input_input_16_listener($event) {\n          return ctx.onValidatePasswordInput($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"label\");\n        i0.ɵɵtext(18, \"Confirmar clave nueva\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"span\", 9);\n        i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_span_click_19_listener() {\n          return ctx.toggleValidatePasswordVisibility();\n        });\n        i0.ɵɵelement(20, \"img\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 13)(22, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_button_click_22_listener() {\n          return ctx.resetPassword();\n        });\n        i0.ɵɵtext(23, \"Restablecer\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"footer\")(25, \"p\");\n        i0.ɵɵtext(26, \"\\u00A9 Desaf\\u00EDo T\\u00E9cnico Chek Agosto 2023 - Claudio Andr\\u00E9s Bascu\\u00F1\\u00E1n Valdivia\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.showAlert);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"type\", ctx.hidePassword ? \"password\" : \"text\");\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"src\", ctx.showPasswordIcon, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"type\", ctx.hideValidatePassword ? \"password\" : \"text\");\n        i0.ɵɵproperty(\"ngModel\", ctx.validatePassword);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"src\", ctx.showValidatePasswordIcon, i0.ɵɵsanitizeUrl);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.PatternValidator, i4.NgModel, i4.NgForm],\n    styles: [\".container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100vh}.reset-password-form[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;padding:30px;border-radius:8px;background-color:#fff;box-shadow:0 2px 4px #0000001a;max-width:400px;width:100%}.tittle-container[_ngcontent-%COMP%]{margin-bottom:20px}.reset-password-title[_ngcontent-%COMP%]{font-size:24px;font-weight:700;color:#371d53;font-family:Arial,sans-serif;padding-bottom:10px}input[_ngcontent-%COMP%]{width:180px;padding:10px;margin-bottom:15px;border:1px solid #ccc;border-radius:4px;outline:none;transition:border-color .3s}input[_ngcontent-%COMP%]:focus{border-color:#5a2e93}input[_ngcontent-%COMP%]::placeholder{color:#7a7a7a}input[_ngcontent-%COMP%]:focus::placeholder{color:#5a2e93}.password-input-container[_ngcontent-%COMP%], .validatePassword-input-container[_ngcontent-%COMP%]{position:relative}.alert-message[_ngcontent-%COMP%]{padding-bottom:25px;text-align:center;font-family:Arial,sans-serif}.reset-password[_ngcontent-%COMP%]{width:100%;padding:10px;border:1px solid #ccc;border-radius:4px;outline:none;transition:border-color .3s}.reset-password[_ngcontent-%COMP%]:focus{border-color:#5a2e93}.reset-password[_ngcontent-%COMP%]::placeholder{color:#7a7a7a}.reset-password[_ngcontent-%COMP%]:focus::placeholder{color:#5a2e93}.password-toggle-btn[_ngcontent-%COMP%], .validatePassword-toggle-btn[_ngcontent-%COMP%]{position:absolute;top:40%;right:10px;transform:translateY(-50%);cursor:pointer;z-index:1}.password-toggle-btn[_ngcontent-%COMP%]   img[_ngcontent-%COMP%], .validatePassword-toggle-btn[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:20px;height:20px}.reset-password-button[_ngcontent-%COMP%]{width:200px;padding:10px;background-color:#5a2e93;color:#fff;border:none;border-radius:4px;font-size:16px;cursor:pointer;outline:none}footer[_ngcontent-%COMP%]{margin-top:20px;text-align:center}.floating-label[_ngcontent-%COMP%]{padding-bottom:10px;position:relative}.floating-label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{z-index:1;position:relative}.floating-label[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{position:absolute;font-family:Arial,sans-serif;top:10px;left:10px;font-size:12px;color:#7a7a7a;transition:top .3s,font-size .3s}.floating-label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus + label[_ngcontent-%COMP%], .floating-label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:placeholder-shown) + label[_ngcontent-%COMP%]{top:-15px;font-size:10px;color:#5a2e93}\"]\n  });\n  return ResetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}