{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Claudio/Desktop/pruebas_tecnicas/Chek/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\n// login.component.ts\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n  } // Inyecta el servicio Router en el constructor\n  login() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const success = yield _this.authService.login(_this.email, _this.password);\n      if (success) {\n        // Redirige al usuario a \"/home\" después del inicio de sesión exitoso\n        // (Recuerda configurar el enrutamiento en tu aplicación)\n        _this.router.navigate(['/home']);\n      } else {\n        alert('Inicio de sesión fallido. Por favor, verifique sus credenciales.');\n      }\n    })();\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","authService","router","email","password","login","_this","_asyncToGenerator","success","navigate","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\login\\login.component.ts"],"sourcesContent":["// login.component.ts\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router'; // Importa el servicio Router\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  email: string = '';\n  password: string = '';\n\n  constructor(private authService: AuthService, private router: Router) {} // Inyecta el servicio Router en el constructor\n\n  async login(): Promise<void> {\n    const success = await this.authService.login(this.email, this.password);\n\n    if (success) {\n      // Redirige al usuario a \"/home\" después del inicio de sesión exitoso\n      // (Recuerda configurar el enrutamiento en tu aplicación)\n      this.router.navigate(['/home']);\n    } else {\n      alert('Inicio de sesión fallido. Por favor, verifique sus credenciales.');\n    }\n  }\n}\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAH5D,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;EAEkD,CAAC,CAAC;EAEnEC,KAAKA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACT,MAAMC,OAAO,SAASF,KAAI,CAACL,WAAW,CAACI,KAAK,CAACC,KAAI,CAACH,KAAK,EAAEG,KAAI,CAACF,QAAQ,CAAC;MAEvE,IAAII,OAAO,EAAE;QACX;QACA;QACAF,KAAI,CAACJ,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;OAChC,MAAM;QACLC,KAAK,CAAC,kEAAkE,CAAC;;IAC1E;EACH;CACD;AAjBYX,cAAc,GAAAY,UAAA,EAL1Bb,SAAS,CAAC;EACTc,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWf,cAAc,CAiB1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}