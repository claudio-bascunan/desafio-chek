{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Claudio/Desktop/pruebas_tecnicas/Chek/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    // Variables para almacenar los datos del formulario\n    this.firstname = '';\n    this.lastname = '';\n    this.email = '';\n    this.password = '';\n    this.validatePassword = '';\n    this.passwordMatch = false;\n    this.birthdate = '';\n    this.showAlert = false; // Variable para controlar la visibilidad del texto de alerta\n    this.passwordPattern = /^\\d{4}$/; // Expresión regular para validar la contraseña (4 dígitos)\n  }\n  // Función para enviar la solicitud de registro\n  registerUser() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.validateForm()) {\n        return; // Si hay campos vacíos o las contraseñas no coinciden, detener el registro\n      }\n\n      const user = {\n        firstname: _this.firstname,\n        lastname: _this.lastname,\n        email: _this.email,\n        password: _this.password,\n        validatePassword: _this.validatePassword,\n        birthdate: _this.birthdate\n      };\n      try {\n        yield _this.http.post('http://localhost:3000/api/register', user).toPromise();\n        alert('Cuenta creada exitosamente! Verifica tu correo electrónico para activar tu cuenta.');\n        _this.router.navigate(['/login']);\n      } catch (error) {\n        console.error('Error al registrar usuario:', error);\n        alert(error.error.message);\n        // Aquí puedes mostrar un mensaje de error al usuario\n      }\n    })();\n  }\n  // Función para validar el formulario antes de enviarlo\n  validateForm() {\n    if (this.firstname.trim() === '' || this.lastname.trim() === '' || this.email.trim() === '' || this.password.trim() === '' || this.validatePassword.trim() === '' || this.birthdate.trim() === '') {\n      alert('Todos los campos son obligatorios');\n      return false;\n    }\n    if (this.firstname.length > 20) {\n      alert('El nombre no puede superar los 20 caracteres');\n      return false;\n    }\n    if (this.lastname.length > 20) {\n      alert('El apellido no puede superar los 20 caracteres');\n      return false;\n    }\n    if (!this.isValidDate(this.birthdate)) {\n      alert('Fecha de nacimiento inválida. El formato debe ser yyyy-mm-dd');\n      return false;\n    }\n    if (!this.email.includes('@') || !this.email.includes('.')) {\n      alert('El correo electrónico no es válido');\n      return false;\n    }\n    if (!this.passwordPattern.test(this.password)) {\n      alert('La contraseña debe ser de 4 dígitos numéricos');\n      return false;\n    }\n    if (this.password !== this.validatePassword) {\n      alert('Las contraseñas no coinciden');\n      return false;\n    }\n    return true;\n  }\n  // Función para validar el formato de la fecha\n  isValidDate(dateString) {\n    const regexDate = /^\\d{4}-\\d{2}-\\d{2}$/;\n    if (!regexDate.test(dateString)) return false;\n    const date = new Date(dateString);\n    return date.toISOString().slice(0, 10) === dateString;\n  }\n  onPasswordInput(event) {\n    // Limitar el input de contraseña a solo 4 dígitos numéricos\n    const passwordValue = event.target.value;\n    event.target.value = passwordValue.replace(/\\D/g, '').slice(0, 4);\n    this.password = event.target.value;\n    this.checkPasswordMatch();\n  }\n  onValidatePasswordInput(event) {\n    // Limitar el input de validación de contraseña a solo 4 dígitos numéricos\n    const validatePasswordValue = event.target.value;\n    event.target.value = validatePasswordValue.replace(/\\D/g, '').slice(0, 4);\n    this.validatePassword = event.target.value;\n    this.checkPasswordMatch();\n  }\n  checkPasswordMatch() {\n    // Verificar si las contraseñas coinciden\n    this.passwordMatch = this.password === this.validatePassword;\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);","map":{"version":3,"names":["Component","RegisterComponent","constructor","http","router","firstname","lastname","email","password","validatePassword","passwordMatch","birthdate","showAlert","passwordPattern","registerUser","_this","_asyncToGenerator","validateForm","user","post","toPromise","alert","navigate","error","console","message","trim","length","isValidDate","includes","test","dateString","regexDate","date","Date","toISOString","slice","onPasswordInput","event","passwordValue","target","value","replace","checkPasswordMatch","onValidatePasswordInput","validatePasswordValue","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Claudio\\Desktop\\pruebas_tecnicas\\Chek\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\ninterface RegisterUser {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  validatePassword: string;\n  birthdate: string;\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  // Variables para almacenar los datos del formulario\n  firstname: string = '';\n  lastname: string = '';\n  email: string = '';\n  password: string = '';\n  validatePassword: string = '';\n  passwordMatch: boolean = false;\n  birthdate: string = '';\n\n  showAlert: boolean = false; // Variable para controlar la visibilidad del texto de alerta\n  passwordPattern: RegExp = /^\\d{4}$/; // Expresión regular para validar la contraseña (4 dígitos)\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  // Función para enviar la solicitud de registro\n  async registerUser() {\n    if (!this.validateForm()) {\n      return; // Si hay campos vacíos o las contraseñas no coinciden, detener el registro\n    }\n\n    const user: RegisterUser = {\n      firstname: this.firstname,\n      lastname: this.lastname,\n      email: this.email,\n      password: this.password,\n      validatePassword: this.validatePassword,\n      birthdate: this.birthdate\n    };\n\n    try {\n      await this.http.post<any>('http://localhost:3000/api/register', user).toPromise();\n      alert('Cuenta creada exitosamente! Verifica tu correo electrónico para activar tu cuenta.');\n      this.router.navigate(['/login']);\n    } catch (error: any) {\n      console.error('Error al registrar usuario:', error);\n      alert(error.error.message);\n      // Aquí puedes mostrar un mensaje de error al usuario\n    }\n  }\n\n  // Función para validar el formulario antes de enviarlo\n  validateForm(): boolean {\n    if (\n      this.firstname.trim() === '' ||\n      this.lastname.trim() === '' ||\n      this.email.trim() === '' ||\n      this.password.trim() === '' ||\n      this.validatePassword.trim() === '' ||\n      this.birthdate.trim() === ''\n    ) {\n      alert('Todos los campos son obligatorios');\n      return false;\n    }\n\n    if (this.firstname.length > 20) {\n      alert('El nombre no puede superar los 20 caracteres');\n      return false;\n    }\n\n    if (this.lastname.length > 20) {\n      alert('El apellido no puede superar los 20 caracteres');\n      return false;\n    }\n\n    if (!this.isValidDate(this.birthdate)) {\n      alert('Fecha de nacimiento inválida. El formato debe ser yyyy-mm-dd');\n      return false;\n    }\n\n    if (!this.email.includes('@') || !this.email.includes('.')) {\n      alert('El correo electrónico no es válido');\n      return false;\n    }\n\n    if (!this.passwordPattern.test(this.password)) {\n      alert('La contraseña debe ser de 4 dígitos numéricos');\n      return false;\n    }\n\n    if (this.password !== this.validatePassword) {\n      alert('Las contraseñas no coinciden');\n      return false;\n    }\n\n    return true;\n  }\n\n  // Función para validar el formato de la fecha\n  isValidDate(dateString: string): boolean {\n    const regexDate = /^\\d{4}-\\d{2}-\\d{2}$/;\n    if (!regexDate.test(dateString)) return false;\n    const date = new Date(dateString);\n    return date.toISOString().slice(0, 10) === dateString;\n  }\n\n  onPasswordInput(event: any) {\n    // Limitar el input de contraseña a solo 4 dígitos numéricos\n    const passwordValue = event.target.value;\n    event.target.value = passwordValue.replace(/\\D/g, '').slice(0, 4);\n    this.password = event.target.value;\n    this.checkPasswordMatch();\n  }\n\n  onValidatePasswordInput(event: any) {\n    // Limitar el input de validación de contraseña a solo 4 dígitos numéricos\n    const validatePasswordValue = event.target.value;\n    event.target.value = validatePasswordValue.replace(/\\D/g, '').slice(0, 4);\n    this.validatePassword = event.target.value;\n    this.checkPasswordMatch();\n  }\n\n  checkPasswordMatch() {\n    // Verificar si las contraseñas coinciden\n    this.passwordMatch = this.password === this.validatePassword;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}